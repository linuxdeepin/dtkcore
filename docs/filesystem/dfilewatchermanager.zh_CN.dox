/*!
@~chinese
@ingroup dfilesystem
@file include/filesystem/dfilewatchermanager.h

@class DFileWatcherManager
@brief DFileWatcherManager 类可以帮助管理一系列 DFileWatcher 文件监视器，并在文件变动时发送信号通知.

@fn DFileWatcher* DFileWatcherManager::add(const QString &filePath)
@brief 为路径`filePath`创建 DFileWatcher 并将其添加到 DFileWatcherManager 中.
@return 被创建并添加到 DFileWatcherManager 的 DFileWatcher

@fn void DFileWatcherManager::remove(const QString &filePath)
@brief 从 DFileWatcherManager 中移除路径`filePath`对应的 DFileWatcher.

@fn void DFileWatcherManager::removeAll()
@brief 从 DFileWatcherManager 中移除所有的 DFileWatcher.

@fn void DFileWatcherManager::watchedFiles()
@brief 获取 DFileWatcherManager 中所有的 DFileWatcher.

@var void DFileWatcherManager::fileDeleted(const QString &filePath)
@brief 当路径`filePath`对应的文件被删除时发送此信号.

@var void DFileWatcherManager::fileAttributeChanged(const QString &filePath)
@brief 当路径`filePath`对应的文件属性发生变化时发送此信号.

@var void DFileWatcherManager::fileMoved(const QString &fromFilePath, const QString &toFilePath)
@brief 当路径`fromFilePath`对应的文件被移动到路径`toFilePath`时发送此信号.

@var void DFileWatcherManager::fileClosed(const QString &filePath)
@brief 当路径`filePath`对应的文件被关闭时发送此信号.

@var void DFileWatcherManager::fileModified(const QString &filePath)
@brief 当路径`filePath`对应的文件被修改时发送此信号.

@var void DFileWatcherManager::subfileCreated(const QString &filePath)
@brief 当路径`filePath`对应的文件夹中有新的子文件被创建时发送此信号.

*/
