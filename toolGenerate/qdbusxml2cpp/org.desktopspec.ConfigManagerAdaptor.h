/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dtkcore/src/dbus/org.desktopspec.ConfigManager.xml -a ./dtkcore/toolGenerate/qdbusxml2cpp/org.desktopspec.ConfigManagerAdaptor -i ./dtkcore/toolGenerate/qdbusxml2cpp/org.desktopspec.ConfigManager.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_DESKTOPSPEC_CONFIGMANAGERADAPTOR_H
#define ORG_DESKTOPSPEC_CONFIGMANAGERADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dtkcore/toolGenerate/qdbusxml2cpp/org.desktopspec.ConfigManager.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.desktopspec.ConfigManager
 */
class ConfigManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.desktopspec.ConfigManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.desktopspec.ConfigManager\">\n"
"    <method name=\"acquireManager\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appid\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"name\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"subpath\"/>\n"
"      <arg direction=\"out\" type=\"o\" name=\"path\"/>\n"
"    </method>\n"
"    <method name=\"update\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"    </method>\n"
"    <method name=\"sync\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ConfigManagerAdaptor(QObject *parent);
    virtual ~ConfigManagerAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QDBusObjectPath acquireManager(const QString &appid, const QString &name, const QString &subpath);
    void sync(const QString &path);
    void update(const QString &path);
Q_SIGNALS: // SIGNALS
};

#endif
